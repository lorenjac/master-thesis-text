KVS are a vital database technology in modern information processing. While KVS are especially relevant in distributed systems, this work concentrates on single-node KVS for convenience. As in MMDB, KVS can achieve maximum performance when combining in-memory operation and concurrency. In order to preserve consistency the presence of concurrent transactions, a dedicated concurrency control is required. A modern control scheme which is also used in KVS is MVCC. However, many MVCC protocols, such as the popular SI, are not serializing and are therefore prone to inconsistencies. On the other hand, alternatives which guarantee serializability tend to be error-prone and expensive. Despite having shown promising results, all existing KVS for NVRAM still only implement SI or locking. This circumstance gives rise to the question whether NVRAM can provide enough leverage to make serializable transactions affordable without resorting to locking.